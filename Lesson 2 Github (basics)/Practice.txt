GIT Homework 1

Для выполнения задания у вас должен быть установлен для Windows - GitBash.
Создан аккаунт в GitHub

Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.


Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

JSON
 4. Создать внешний репозиторий c названием JSON. = выполнил
 5. Клонировать репозиторий JSON на локальный компьютер. = git clone https://github.com/m89040885558/JSON.git
 6. Внутри локального JSON создать файл “new.json”. = > new.json
 7. Добавить файл под гит. = git add new.json
 8. Закоммитить файл. = git commit -m "JSON_v1"
 9. Отправить файл на внешний GitHub репозиторий. = git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, 
будущая желаемая зарплата). Всё написать в формате JSON. = vim new.json 
 11. Отправить изменения на внешний репозиторий. = git commit -am "JSON_v2" / git push
 12. Создать файл preferences.json = new.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года,
 сторона которую хотели бы посетить) в формате JSON. = vim preferences.json
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON = > sklls.json
 15. Отправить сразу 2 файла на внешний репозиторий. git add . && git commit -m "add 2 file"_v1 && git push
 16. На веб интерфейсе создать файл bug_report.json. = add file/Create new file
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. = выполнил
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON. = выполнил
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе. = выполнил
 20. Синхронизировать внешний и локальный репозиторий JSON = git fetch && git pull


XML
 21. Создать внешний репозиторий c названием XML. = выполнил
 22. Клонировать репозиторий XML на локальный компьютер. = git clone https://github.com/m89040885558/XML.git
 23. Внутри локального XML создать файл “new.xml”. = > new.xml
 24. Добавить файл под гит. = git add new.xml
 25. Закоммитить файл. = git commit -m "add new.xml"
 26. Отправить файл на внешний GitHub репозиторий. = git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата).
 Всё написать в формате XML. = vim new.xml
 28. Отправить изменения на внешний репозиторий. git commit -am "редакция 1 new.xml" && git push
 29. Создать файл preferences.xml = > preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда,
 любимое время года, сторона которую хотели бы посетить) в формате XML. = vim preferences.xml
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML = > sklls.xml
 32. Сделать коммит в одну строку. = git add . && git commit -m "add filles"
 33. Отправить сразу 2 файла на внешний репозиторий. = git push
 34. На веб интерфейсе создать файл bug_report.xml. = выполнил
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе. = выполнил
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML. = выполнил
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе. = выполнил
 38. Синхронизировать внешний и локальный репозиторий XML = git fetch && git pull


TXT
 1. Создать внешний репозиторий c названием TXT. = выполнил
 2. Клонировать репозиторий TXT на локальный компьютер. = git clone
 3. Внутри локального TXT создать файл “new.txt”. = > new.txt
 4. Добавить файл под гит. = = git add new.txt
 5. Закоммитить файл. = git commit -m "add new.txt"
 6. Отправить файл на внешний GitHub репозиторий. = git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). 
Всё написать в формате TXT. = vim new.txt
 8. Отправить изменения на внешний репозиторий. git commit -am "new.txt ред 1" && git push
 9. Создать файл preferences.txt = > preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года,
 сторона которую хотели бы посетить) в формате TXT. = vim preferences.txt
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT = > sklls.txt
 12. Сделать коммит в одну строку. = git add . && git commit -m "add filles"
 13. Отправить сразу 2 файла на внешний репозиторий. = git push
 14. На веб интерфейсе создать файл bug_report.txt. = выполнил
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе. = выполнил
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT. = выполнил
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 18. Синхронизировать внешний и локальный репозиторий TXT = git fetch && git pull